
public class Driver {

	public static void main(String args[]) {
		//int arr[] = { 10, 7, 8, 9, 1, 5 };
		//int arr[] = {10, 80, 30, 90, 40, 50, 70};
		//int arr[] = {7, 10, 4, 3, 20, 15};
		int arr[] = {1, 34, 3, 98, 9, 76, 45, 4};
		QuickSort qSort = new QuickSort();
		qSort.sort(arr, 0, arr.length - 1);
		printArray(arr);
	}

	static void printArray(int arr[]) {
		int n = arr.length;
		for (int i = n-1; i >= 0; i--)
			System.out.print(arr[i]);
		System.out.println();
	}
}
//---------------------------------------
class QuickSort {

	public void sort(int[] arr, int start, int end) {
		quickSort(arr, start, end);
	}

	public void quickSort(int[] arr, int start, int piv) {
		if (piv > start) {
			int partition = getPartition(arr, start, piv);
			quickSort(arr, start, partition - 1);
			quickSort(arr, partition + 1, piv);
		}
	}

	public int getPartition(int[] arr, int start, int piv) {
		int j = start; // location of the pivot
		
		for (int i = start; i < piv; i++) {
			if (formCombination(arr[i], arr[piv]) <= formCombination(arr[piv], arr[i]))
				swap(arr, i, j++);
		}
		
		// for pivot
		swap(arr, j, piv);
		return j;
	} 

	public void swap(int[] arr, int index1, int index2) {
		int temp = arr[index1];
		arr[index1] = arr[index2];
		arr[index2] = temp;
	}
	
	public int formCombination(int i, int j) {
		
		int k = Integer.valueOf(String.valueOf(i) + String.valueOf(j));
		return k;
	}
}
